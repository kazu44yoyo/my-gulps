'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FastTransformer = undefined;

var _child_process = require('child_process');

var _child_process2 = _interopRequireDefault(_child_process);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _portfinder = require('portfinder');

var _portfinder2 = _interopRequireDefault(_portfinder);

var _superagent = require('superagent');

var _superagent2 = _interopRequireDefault(_superagent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class FastTransformer {
  static get DEFAULT_ADDRESS() {
    return '127.0.0.1';
  }

  constructor(minifier) {
    this._minifier = minifier;

    this._phpServer = null;
  }

  get listening() {
    return Boolean(this._phpServer && typeof this._phpServer == 'object');
  }

  async close() {
    if (this.listening) {
      this._phpServer.process.kill();
      this._phpServer = null;
    }

    return null;
};

  async listen() {
    if (this.listening) return this._phpServer.port;

    const getPort = () => new Promise((resolve, reject) => _portfinder2.default.getPort((err, port) => {
      if (err) reject(err);else resolve(port);
    }));

    let address = FastTransformer.DEFAULT_ADDRESS;
    let port = await getPort();

    return new Promise(resolve => {
      let handler = async () => await this.close();
      this._minifier.once('end', handler).once('error', handler);

      let args = ['-S', `${ address }:${ port }`, '-t', _path2.default.join(__dirname, '../web')];
      this._phpServer = { address, port, process: _child_process2.default.spawn(this._minifier.binary, args) };
      setTimeout(() => resolve(port), 1000);
    });
  }

  async transform(script) {
    await this.listen();

    let response = await _superagent2.default.get(`http://${ this._phpServer.address }:${ this._phpServer.port }/index.php`).query({ file: script });

    return response.text;
  }
}
exports.FastTransformer = FastTransformer;
